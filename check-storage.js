const { createClient } = require('@supabase/supabase-js')
require('dotenv').config({ path: '.env.local' })

const supabase = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL,
  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY
)

async function checkStorage() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Supabase Storage...\n')

  try {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ buckets
    const { data: buckets, error } = await supabase.storage.listBuckets()
    
    if (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞:', error.message)
      return
    }

    console.log('üìÅ –ù–∞–π–¥–µ–Ω–Ω—ã–µ buckets:', buckets.map(b => `${b.name} (${b.public ? '–ø—É–±–ª–∏—á–Ω—ã–π' : '–ø—Ä–∏–≤–∞—Ç–Ω—ã–π'})`))
    
    const imagesBucket = buckets.find(b => b.name === 'images')
    
    if (!imagesBucket) {
      console.log('‚ùå Bucket "images" –Ω–µ –Ω–∞–π–¥–µ–Ω!')
      console.log('üí° –°–æ–∑–¥–∞–π—Ç–µ bucket "images" –≤ Supabase Dashboard ‚Üí Storage')
      console.log('üí° –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: SUPABASE_SETUP.md')
      return
    }

    if (!imagesBucket.public) {
      console.log('‚ö†Ô∏è  Bucket "images" –Ω–µ –ø—É–±–ª–∏—á–Ω—ã–π!')
      console.log('üí° –°–¥–µ–ª–∞–π—Ç–µ bucket –ø—É–±–ª–∏—á–Ω—ã–º –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö')
      return
    }

    console.log('‚úÖ Bucket "images" –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ')
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–ø–æ–∫
    const { data: folders } = await supabase.storage.from('images').list('')
    const folderNames = folders?.map(f => f.name) || []
    
    console.log('üìÇ –ü–∞–ø–∫–∏ –≤ bucket:', folderNames)
    
    const requiredFolders = ['credentials', 'services', 'blog']
    const missingFolders = requiredFolders.filter(f => !folderNames.includes(f))
    
    if (missingFolders.length > 0) {
      console.log('‚ö†Ô∏è  –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–∞–ø–∫–∏:', missingFolders)
      console.log('üí° –°–æ–∑–¥–∞–π—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–∞–ø–∫–∏ –≤ bucket "images"')
    } else {
      console.log('‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–ø–∫–∏ —Å–æ–∑–¥–∞–Ω—ã')
    }

    console.log('\nüéâ Storage –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ! –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–æ–ª–∂–Ω–∞ —Ä–∞–±–æ—Ç–∞—Ç—å.')

  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ:', error.message)
    console.log('üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ .env.local')
  }
}

checkStorage() 