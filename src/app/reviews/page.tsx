'use client';

import React, { useEffect, useState } from "react";
import { motion } from "framer-motion";
import { reviewService } from "@/lib/reviews";
import { Review } from "@/types/review";
import { useLanguage } from "@/components/i18n/LanguageProvider";
import { Container } from "@/components/Container";
import { Heading } from "@/components/Heading";
import { Paragraph } from "@/components/Paragraph";
import { IconStar, IconUser, IconMessage } from "@tabler/icons-react";

export default function ReviewsPage() {
  const [reviews, setReviews] = useState<Review[]>([]);
  const [loading, setLoading] = useState(true);
  const [showForm, setShowForm] = useState(false);
  const [submitting, setSubmitting] = useState(false);
  const [submitMessage, setSubmitMessage] = useState<string>('');
  const { currentLanguage } = useLanguage();

  // Form state
  const [formData, setFormData] = useState({
    name: '',
    content: ''
  });

  // Temporary mock data for testing
  const mockReviews: Review[] = [
    {
      id: '1',
      content: 'Suurep√§rane teenindus ja professionaalne l√§henemine. Soovitan soojalt!',
      content_et: 'Suurep√§rane teenindus ja professionaalne l√§henemine. Soovitan soojalt!',
      content_ru: '–û—Ç–ª–∏—á–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥. –ì–æ—Ä—è—á–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é!',
      rating: 5,
      published: true,
      author_id: 'test'
    },
    {
      id: '2',
      content: 'V√§ga hea kogemus, ait√§h professionaalse abi eest!',
      content_et: 'V√§ga hea kogemus, ait√§h professionaalse abi eest!',
      content_ru: '–û—á–µ–Ω—å —Ö–æ—Ä–æ—à–∏–π –æ–ø—ã—Ç, —Å–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é –ø–æ–º–æ—â—å!',
      rating: 5,
      published: true,
      author_id: 'test'
    },
    {
      id: '3',
      content: 'T√§iuslik teenindus ja s√µbralik personal. Tulen kindlasti tagasi!',
      content_et: 'T√§iuslik teenindus ja s√µbralik personal. Tulen kindlasti tagasi!',
      content_ru: '–ò–¥–µ–∞–ª—å–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –∏ –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–ª. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤–µ—Ä–Ω—É—Å—å!',
      rating: 5,
      published: true,
      author_id: 'test'
    },
    {
      id: '4',
      content: 'V√§ga professionaalne ja asjatundlik. Soovitan k√µigile!',
      content_et: 'V√§ga professionaalne ja asjatundlik. Soovitan k√µigile!',
      content_ru: '–û—á–µ–Ω—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ –∏ –∫–æ–º–ø–µ—Ç–µ–Ω—Ç–Ω–æ. –†–µ–∫–æ–º–µ–Ω–¥—É—é –≤—Å–µ–º!',
      rating: 4,
      published: true,
      author_id: 'test'
    },
    {
      id: '5',
      content: 'Olen v√§ga rahul tulemustega. Ait√§h!',
      content_et: 'Olen v√§ga rahul tulemustega. Ait√§h!',
      content_ru: '–û—á–µ–Ω—å –¥–æ–≤–æ–ª–µ–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏. –°–ø–∞—Å–∏–±–æ!',
      rating: 5,
      published: true,
      author_id: 'test'
    }
  ];

  useEffect(() => {
    loadReviews();
  }, []);

  const loadReviews = async () => {
    try {
      const data = await reviewService.getPublishedReviews();
      setReviews(data.length > 0 ? data : mockReviews);
    } catch (error) {
      console.error('Error loading reviews:', error);
      setReviews(mockReviews);
    } finally {
      setLoading(false);
    }
  };

  const getLocalizedContent = (review: Review) => {
    if (currentLanguage === 'et' && review.content_et) return review.content_et;
    if (currentLanguage === 'ru' && review.content_ru) return review.content_ru;
    return review.content;
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setSubmitting(true);
    setSubmitMessage('');

    try {
      // Create a public review submission
      const reviewData = {
        content: formData.content,
        author_name: formData.name
      };

      await submitPublicReview(reviewData);
      
      setSubmitMessage(
        currentLanguage === 'et' 
          ? 'Ait√§h arvustuse eest! Teie arvustus on n√º√ºd avaldatud.'
          : '–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤! –í–∞—à –æ—Ç–∑—ã–≤ —Ç–µ–ø–µ—Ä—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω.'
      );
      
      // Reset form
      setFormData({
        name: '',
        content: ''
      });
      
      setShowForm(false);
      
      // Reload reviews to show the new one
      await loadReviews();
    } catch (error) {
      console.error('Error submitting review:', error);
      setSubmitMessage(
        currentLanguage === 'et' 
          ? 'Viga arvustuse saatmisel. Palun proovige uuesti.'
          : '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–∑—ã–≤–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.'
      );
    } finally {
      setSubmitting(false);
    }
  };

  const submitPublicReview = async (reviewData: any) => {
    try {
      console.log('üöÄ –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–∑—ã–≤–∞:', reviewData);
      
      const response = await fetch('/api/reviews/public', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(reviewData),
      });

      const result = await response.json();
      console.log('üì• –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', result);

      if (!response.ok) {
        // More detailed error handling
        let errorMessage = result.error || 'Failed to submit review';
        
        if (result.code === 'TABLE_NOT_FOUND') {
          errorMessage = currentLanguage === 'et' 
            ? 'Andmebaas pole seadistatud. V√µtke √ºhendust administraatoriga.'
            : '–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.';
        } else if (result.code === 'PERMISSION_DENIED') {
          errorMessage = currentLanguage === 'et' 
            ? 'Juurdep√§√§s keelatud. V√µtke √ºhendust administraatoriga.'
            : '–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.';
        } else if (result.code === 'SCHEMA_ERROR') {
          errorMessage = currentLanguage === 'et' 
            ? 'Andmebaasi struktuur on vigane. V√µtke √ºhendust administraatoriga.'
            : '–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.';
        } else if (result.details) {
          // Show details in development
          if (process.env.NODE_ENV === 'development') {
            errorMessage += ` (${result.details})`;
          }
        }
        
        throw new Error(errorMessage);
      }

      return result;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–∑—ã–≤–∞:', error);
      throw error;
    }
  };

  if (loading) {
    return (
      <Container>
        <div className="py-10">
          <Heading as="h1" className="">
            {currentLanguage === 'et' ? 'Laadimine...' : '–ó–∞–≥—Ä—É–∑–∫–∞...'}
          </Heading>
        </div>
      </Container>
    );
  }

  return (
    <Container>
      <div className="py-0">
        {/* Header */}
        <div className="mb-8 flex justify-between items-center">
          <Heading as="h1" className="font-black">
            {currentLanguage === 'et' ? 'Arvustused' : '–û—Ç–∑—ã–≤—ã'}
          </Heading>
          <button
            onClick={() => setShowForm(!showForm)}
            className="bg-poppy-500 hover:bg-poppy-600 text-white px-6 py-2 rounded-lg font-medium transition-colors"
          >
            {currentLanguage === 'et' ? 'J√§ta arvustus' : '–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤'}
          </button>
        </div>

        {/* Review Form */}
        {showForm && (
          <motion.div
            initial={{ opacity: 0, y: -20 }}
            animate={{ opacity: 1, y: 0 }}
            exit={{ opacity: 0, y: -20 }}
            className="mb-8 glass-effect rounded-xl p-6"
          >
            <Heading as="h2" className="font-bold text-lg mb-4">
              {currentLanguage === 'et' ? 'J√§ta oma arvustus' : '–û—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ–π –æ—Ç–∑—ã–≤'}
            </Heading>
            
            <form onSubmit={handleSubmit} className="space-y-4">
              {/* Name */}
              <div>
                <label className="block text-sm font-medium text-sage-800 mb-1">
                  <IconUser className="inline h-4 w-4 mr-1" />
                  {currentLanguage === 'et' ? 'Nimi' : '–ò–º—è'}
                </label>
                <input
                  type="text"
                  value={formData.name}
                  onChange={(e) => setFormData({...formData, name: e.target.value})}
                  required
                  className="w-full px-3 py-2 border border-sage-300 rounded-md focus:outline-none focus:ring-2 focus:ring-poppy-500"
                  placeholder={currentLanguage === 'et' ? 'Teie nimi' : '–í–∞—à–µ –∏–º—è'}
                />
              </div>

              {/* Review Content */}
              <div>
                <label className="block text-sm font-medium text-sage-800 mb-1">
                  <IconMessage className="inline h-4 w-4 mr-1" />
                  {currentLanguage === 'et' ? 'Arvustus' : '–û—Ç–∑—ã–≤'}
                </label>
                <textarea
                  value={formData.content}
                  onChange={(e) => setFormData({...formData, content: e.target.value})}
                  rows={4}
                  required
                  className="w-full px-3 py-2 border border-sage-300 rounded-md focus:outline-none focus:ring-2 focus:ring-poppy-500"
                  placeholder={currentLanguage === 'et' ? 'Kirjutage oma kogemus...' : '–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –æ–ø—ã—Ç...'}
                />
              </div>

              {/* Submit buttons */}
              <div className="flex justify-end space-x-3">
                <button
                  type="button"
                  onClick={() => setShowForm(false)}
                  className="px-4 py-2 text-sage-700 border border-sage-300 rounded-md hover:bg-sage-50 transition-colors"
                >
                  {currentLanguage === 'et' ? 'T√ºhista' : '–û—Ç–º–µ–Ω–∞'}
                </button>
                <button
                  type="submit"
                  disabled={submitting || !formData.content.trim() || !formData.name.trim()}
                  className="px-6 py-2 bg-poppy-500 text-white rounded-md hover:bg-poppy-600 disabled:opacity-50 disabled:cursor-not-allowed transition-colors"
                >
                  {submitting 
                    ? (currentLanguage === 'et' ? 'Saadan...' : '–û—Ç–ø—Ä–∞–≤–ª—è—é...') 
                    : (currentLanguage === 'et' ? 'Saada arvustus' : '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤')
                  }
                </button>
              </div>
            </form>

            {/* Submit Message */}
            {submitMessage && (
              <div className={`mt-4 p-3 rounded-md ${
                submitMessage.includes('Viga') || submitMessage.includes('–û—à–∏–±–∫–∞')
                  ? 'bg-red-100 text-red-700'
                  : 'bg-green-100 text-green-700'
              }`}>
                {submitMessage}
              </div>
            )}
          </motion.div>
        )}

        {/* Reviews Display */}
        {reviews.length === 0 ? (
          <div className="text-center text-gray-600 py-8">
            {currentLanguage === 'et' ? 'Arvustusi ei leitud' : '–û—Ç–∑—ã–≤—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã'}
          </div>
        ) : (
          <div className="max-w-6xl mx-auto">
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {reviews.map((review, index) => (
                <motion.div
                  key={review.id}
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.5, delay: index * 0.1 }}
                  className="glass-effect rounded-xl p-6 hover:shadow-xl transition-all duration-200 min-h-[240px] flex flex-col"
                >
                  {/* Content */}
                  <blockquote className="text-sage-700 leading-relaxed text-center flex-grow flex items-center justify-center">
                    &ldquo;{getLocalizedContent(review)}&rdquo;
                  </blockquote>
                  
                  {/* Author name and date for public reviews */}
                  {review.author_name && (
                    <div className="mt-4 text-center text-sm text-sage-600 border-t border-sage-200 pt-3">
                      <div>‚Äî {review.author_name}</div>
                      {review.created_at && (
                        <div className="text-xs text-sage-500 mt-1">
                          {new Date(review.created_at).toLocaleDateString(currentLanguage === 'et' ? 'et-EE' : 'ru-RU', {
                            day: 'numeric',
                            month: 'long',
                            year: 'numeric'
                          })}
                        </div>
                      )}
                    </div>
                  )}
                </motion.div>
              ))}
            </div>
          </div>
        )}
      </div>
    </Container>
  );
} 